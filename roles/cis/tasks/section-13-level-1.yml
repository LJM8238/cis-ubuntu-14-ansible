---
# file: tasks/section-13-level-1.yml

- name: 13.1 Ensure Password Fields are Not Empty (Scored)
#  shell: /bin/cat /etc/shadow | /usr/bin/awk -F: '($2 == "" ) { print $1 " does not have a password "}'
  debug: msg="*** Evaluate your infrastructure before locking passwordless accounts"
  tags:
    - scored
    - section13.1

- name: 13.2 Verify No Legacy "+" Entries Exist in /etc/passwd File (Scored)
#  shell: /bin/grep '^+:' /etc/passwd
  debug: msg="*** Delete entries in /etc/password provided by `grep '^+:' /etc/passwd`"
  tags:
    - scored
    - section13.2

- name: 13.3 Verify No Legacy "+" Entries Exist in /etc/shadow File (Scored)
#  shell: /bin/grep '^+:' /etc/shadow
  debug: msg="*** Delete entries in /etc/shadow provided by `grep '^+:' /etc/shadow`"
  tags:
    - scored
    - section13.3

- name: 13.4 Verify No Legacy "+" Entries Exist in /etc/group File (Scored)
#  shell: /bin/grep '^+:' /etc/group
  debug: msg="*** Delete entries in /etc/group provided by `grep '^+:' /etc/group`"
  tags:
    - scored
    - section13.4

- name: 13.5 Verify No UID 0 Accounts Exist Other Than root (Scored)
  shell: /bin/cat /etc/passwd | /usr/bin/awk -F':' '($3 == 0) { print $1 }'
  register: uid_results
  tags:
    - scored
    - section13.5

- name: 13.5 Verify No UID 0 Accounts Exist Other Than root. Ensure that only the word 'root' is returned
  debug: msg="{{uid_results.stdout}}"
  when: uid_results is defined
  tags:
    - scored
    - section13.5

- name: 13.6 Ensure root PATH Integrity (Scored)
  copy: src=check_path_integrity.sh dest=/root/check_path_integrity.sh owner=root group=root mode=755
  tags:
    - scored
    - section13.6

- name: 13.6 Ensure root PATH Integrity (Scored)
  shell: bash /root/check_path_integrity.sh
  tags:
    - scored
    - section13.6

- name: 13.7 Check Permissions on User Home Directories (Scored)
  debug: msg="*** Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users."
  tags:
    - scored
    - section13.7

- name: 13.8 Check User Dot File Permissions (Scored)
  debug: msg="*** Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users."
  tags:
    - scored
    - section13.8

- name: 13.9 Check Permissions on User .netrc Files (Scored)
  debug: msg="*** Making global modifications to user home directories without alerting the user community can result in unexpected outages and unhappy users."
  tags:
    - scored
    - section13.8

- name: 13.10 Check for Presence of User .rhosts Files (Scored)
  debug: msg="*** If any users have .rhosts files determine why they have them"
  tags:
    - scored
    - sectin13.10

- name: 13.11 Check Groups in /etc/passwd (Scored)
  copy: src=check_groups.sh dest=/root/check_groups.sh owner=root group=root mode=0750
  tags:
    - scored
    - section13.11

- name: 13.11 Check Groups in /etc/passwd (Scored)
  shell: bash /root/check_groups.sh
  register: check_groups
  tags:
    - scored
    - section13.11

- name: 13.11 Check Groups in /etc/passwd (Scored)
  debug: msg="{{check_groups.stdout}}"
  when: check_groups is defined
  tags:
    - scored
    - section13.11

- name: 13.12 Check That Users Are Assigned Valid Home Directories (Scored)
  copy: src=check_home_dirs.sh dest=/root/check_home_dirs.sh owner=root group=root mode=0750
  tags:
    - scored
    - section13.12

- name: 13.12 Check That Users Are Assigned Valid Home Directories (Scored)
  shell: bash /root/check_home_dirs.sh
  register: check_home_dirs
  tags:
    - scored
    - section13.12

- name: 13.12 Check That Users Are Assigned Valid Home Directories (Scored)
  debug: msg="{{check_home_dirs.stdout}}"
  when: check_home_dirs is defined and check_home_dirs.stdout exists
  tags:
    - scored
    - section13.12

# vim: set sw=2 ts=2:
