---
#file: tasks/section-09-level-1.yml

- name: 9.1 Configure cron
  debug: msg="*** the system does have maintenance jobs that may include security monitoring that have to run and cron is used to execute them"

- name: 9.1.1 Enable cron Daemon (Scored)
  service: name=cron state=started enabled=yes
  tags:
    - scored
    - section9.1.1

- name: 9.1.2 Set User/Group Owner and Permission on /etc/crontab (Scored)
  file: path=/etc/crontab owner=root group=root mode=0600
  tags:
    - scored
    - section9.1.2

- name: 9.1.3 Set User/Group Owner and Permission on /etc/cron.hourly (Scored)
  file: path=/etc/cron.hourly owner=root group=root mode=0600 recurse=yes
  tags:
    - scored
    - section9.1.3

- name: 9.1.4 Set User/Group Owner and Permission on /etc/cron.daily (Scored)
  file: path=/etc/cron.daily owner=root group=root mode=0600 recurse=yes
  tags:
    - scored
    - section9.1.4

- name: 9.1.5 Set User/Group Owner and Permission on /etc/cron.weekly(Scored)
  file: path=/etc/cron.weekly owner=root group=root mode=0600 recurse=yes
  tags:
    - scored
    - section9.1.5

- name: 9.1.6 Set User/Group Owner and Permission on /etc/cron.monthly(Scored)
  file: path=/etc/cron.monthly owner=root group=root mode=0600 recurse=yes
  tags:
    - scored
    - section9.1.6

- name: 9.1.7 Set User/Group Owner and Permission on /etc/cron.d (Scored)
  file: path=/etc/cron.d owner=root group=root mode=0600 recurse=yes
  tags:
    - scored
    - section9.1.7

- name: 9.1.8 Restrict at/cron to Authorized Users (Scored)
  file: path={{ item.path }} owner=root group=root mode=0600 state={{ item.state }}
  with_items:
    - { path: /etc/cron.deny state: absent }
    - { path: /etc/at.deny state: absent }
    - { path: /etc/cron.allow state: touch }
    - { path: /etc/at.allow state: touch }
  tags:
    - scored
    - section9.1.8

# vim: set sw=2 ts=2:
